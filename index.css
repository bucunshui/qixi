.honeycomb{
    position: relative;
    left:400px;
}
 /*正六边形就是由3个长方形拼成的*/    
 .six,.b,.c{
     width: 100px;/*我们先来定正六边形的边长，定了它就可以算长方形的另一个边长了*/
     height: 173.205px;/*这个边的长度是根号3乘以width*/
     background:pink;
 }
 /*你可以互换一下宽高的值，可以发现这时候角在上*/
 .b{
     transform: rotate(-60deg);/*长方形以它的中心b旋转60度*/
     display: table;
 }
 .c{
     transform: rotate(120deg);/*长方形c以它的中间旋转120度*/
     text-align: center;
     display: table-cell;
     vertical-align: middle;
     
 }
 /*到这里就可以拼出个正六边形了，正六边形就是由3个长方形拼成的*/

 ul{
     float: left;
 }
 li{
     list-style: none;
     margin:10px;   
 }
 /*布局蜂窝*/
 .ul1{
     margin-top:200px;
     margin-right:20px;
 }
 .ul1>li:first-child ,
 .ul3>li:first-child{
     transform: scale(1.2);
 }
 .ul3{
     margin-bottom:50px;
 }
 .ul3>li:first-child{
     margin:0 20px 25px 20px;
 }
 .ul2{
     margin-top:110px;
 }
 .ul4{
     margin-top:130px;
     margin-left:-10px;
 }
 /*布局结束*/
 /*写文字内容，因为c在最上面就写c里面了*/
 a{
     text-decoration: none;
     color: black;
     cursor: default;
     transform: rotate(-60deg);/*因为链接爱c标签里和c一起旋转了所以要转回来。*/
     display:inline-block;
 }
 a:hover,
 a:link,
 a:active{
     text-decoration: none;
     color: black;
 } 

 /*以下是指针经过正六边形产生的效果*/
 .six:hover,
 .six:hover >.b,
 .six:hover >.b>.c,
 .ul1>li:first-child:hover,
 .ul3>li:first-child:hover{
     background:orchid;/*指针指到a,b,c上会变同一个色*/
     transform: scale(1.2);/*指针指到a,b,c上会以中心开始向外扩大，你可以试试transform: scale(1.2，2).效果不一样了，里面的参数一个是x轴，一个y轴的。只写一个表示他们参数一样*/
     position: relative;
     z-index: 10;
     transition: all 3s;/*让它用3秒时间发到到指定宽高*/
 } 
 
 .six:hover >.b{
     transform: scale(1.2);/*为什么这里还要写，和上面重复了呀?因为上面的效果会发现，所有的长方形都重叠在一起，旋转角度不见了，只有一个长方形效果。因为transform: scale出现在上面设置好的transform: rotate后，系统不执行上面执行下面了。*/
     transform: rotate(-60deg);/*为了让角度还在，就改下顺序，放大但是还执行角度变换*/
    
 }
 .six:hover >.b>.c{/*这里原因同b盒子一样*/
     transform: scale(1.2);
     transform: rotate(120deg);
 }